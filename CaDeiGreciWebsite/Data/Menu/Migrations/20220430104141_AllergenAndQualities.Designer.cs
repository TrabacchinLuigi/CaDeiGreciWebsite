// <auto-generated />
using System;
using CaDeiGreciWebsite.Data.Menu;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CaDeiGreciWebsite.Data.Menu.Migrations
{
    [DbContext(typeof(DbContext))]
    [Migration("20220430104141_AllergenAndQualities")]
    partial class AllergenAndQualities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Menu")
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.Allergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImageUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Allergens", "Menu");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dairy",
                            Order = 0
                        },
                        new
                        {
                            Id = 2,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Eggs",
                            Order = 0
                        },
                        new
                        {
                            Id = 3,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fish",
                            Order = 0
                        },
                        new
                        {
                            Id = 4,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gluten",
                            Order = 0
                        },
                        new
                        {
                            Id = 5,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Legumes",
                            Order = 0
                        },
                        new
                        {
                            Id = 6,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Peanut",
                            Order = 0
                        },
                        new
                        {
                            Id = 7,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Seeds",
                            Order = 0
                        },
                        new
                        {
                            Id = 8,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shellfish",
                            Order = 0
                        },
                        new
                        {
                            Id = 9,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Treenuts",
                            Order = 0
                        },
                        new
                        {
                            Id = 10,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Corn",
                            Order = 0
                        });
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories", "Menu");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.CategoryPriceKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoriesPriceKind", "Menu");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Items", "Menu");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.ItemAllergen", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("AllergenId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ItemId", "AllergenId");

                    b.HasIndex("AllergenId");

                    b.ToTable("ItemAllergens", "Menu");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.ItemQuality", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("QualityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ItemId", "QualityId");

                    b.HasIndex("QualityId");

                    b.ToTable("ItemQualities", "Menu");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("MenuPriceKindId")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("MenuPriceKindId");

                    b.ToTable("Prices", "Menu");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.Quality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImageUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Qualities", "Menu");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "bio",
                            Order = 0
                        },
                        new
                        {
                            Id = 2,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "locally grown",
                            Order = 0
                        },
                        new
                        {
                            Id = 3,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "vegan",
                            Order = 0
                        },
                        new
                        {
                            Id = 4,
                            ImageUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "vegetarian",
                            Order = 0
                        });
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.CategoryPriceKind", b =>
                {
                    b.HasOne("CaDeiGreciWebsite.Data.Menu.Category", "Category")
                        .WithMany("PriceKinds")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.Item", b =>
                {
                    b.HasOne("CaDeiGreciWebsite.Data.Menu.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.ItemAllergen", b =>
                {
                    b.HasOne("CaDeiGreciWebsite.Data.Menu.Allergen", "Allergen")
                        .WithMany("ItemsAllergen")
                        .HasForeignKey("AllergenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaDeiGreciWebsite.Data.Menu.Item", "Item")
                        .WithMany("ItemAllergens")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergen");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.ItemQuality", b =>
                {
                    b.HasOne("CaDeiGreciWebsite.Data.Menu.Item", "Item")
                        .WithMany("ItemQualities")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaDeiGreciWebsite.Data.Menu.Quality", "Quality")
                        .WithMany("ItemsQuality")
                        .HasForeignKey("QualityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Quality");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.Price", b =>
                {
                    b.HasOne("CaDeiGreciWebsite.Data.Menu.Item", "MenuItem")
                        .WithMany("Prices")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CaDeiGreciWebsite.Data.Menu.CategoryPriceKind", "MenuPriceKind")
                        .WithMany("Prices")
                        .HasForeignKey("MenuPriceKindId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("MenuPriceKind");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.Allergen", b =>
                {
                    b.Navigation("ItemsAllergen");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.Category", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("PriceKinds");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.CategoryPriceKind", b =>
                {
                    b.Navigation("Prices");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.Item", b =>
                {
                    b.Navigation("ItemAllergens");

                    b.Navigation("ItemQualities");

                    b.Navigation("Prices");
                });

            modelBuilder.Entity("CaDeiGreciWebsite.Data.Menu.Quality", b =>
                {
                    b.Navigation("ItemsQuality");
                });
#pragma warning restore 612, 618
        }
    }
}
